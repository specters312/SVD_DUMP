<?xml version="1.0" encoding="UTF-8"?>
<!--
    Autogenerated for MCP4725 v0.1.0.
    Generated from peripherals/MCP4725.yaml using Cyanobyte Codegen v0.1.0
-->
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
    <vendor>Google Inc.</vendor>
    <name>MCP4725</name>
    <version>0.1.0</version>
    <description>Microchip 4725 Digital-to-Analog Converter</description>
    <licenseText>
    Copyright (C) 2019 Google Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

    </licenseText>
    <!-- Placeholder values -->
    <addressUnitBits>8</addressUnitBits>
    <width>8</width>
    <!-- Define our peripheral -->
    <peripherals>
        <peripheral>
            <name>MCP4725</name>
            <description>Microchip 4725 Digital-to-Analog Converter</description>
            <baseAddress>98</baseAddress>
            <addressBlock>
                <offset>0</offset>
                <size>96</size>
                <usage>registers</usage>
            </addressBlock>
            <registers>
                <register>
                    <name>EEPROM</name>
                    <description>If EEPROM is set, the saved voltage output will
be loaded from power-on.
</description>
                    <addressOffset>96</addressOffset>
                    <size>12</size>
                    <access>read-write</access>
                    <resetValue>0x00</resetValue>
                    <resetMask>0xFF</resetMask>
                    <dataType>uint16_t</dataType>
                    <fields>
                        <field>
                            <name>digitalOut</name>
                            <description>
                            Only allows you to send fully on or off

                            </description>
                            <lsb>0</lsb>
                            <msb>12</msb>
                            <access>read-write</access>
                            <enumeratedValues>
                                <enumeratedValue>
                                    <name>GND</name>
                                    <description>Ground</description>
                                    <value>0</value>
                                </enumeratedValue>
                                <enumeratedValue>
                                    <name>VCC</name>
                                    <description>Vcc (full power)</description>
                                    <value>4095</value>
                                </enumeratedValue>
                            </enumeratedValues>
                            <writeConstraint>
                                <useEnumeratedValues>true</useEnumeratedValues>
                                <range>
                                    <minimum>0</minimum>
                                    <maximum>12</maximum>
                                </range>
                            </writeConstraint>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>VOut</name>
                    <description>VOut = (Vcc * value) / 4096
The output is a range between 0 and Vcc with
steps of Vcc/4096.
In a 3.3v system, each step is 800 microvolts.
</description>
                    <addressOffset>64</addressOffset>
                    <size>12</size>
                    <access>read-write</access>
                    <resetValue>0x00</resetValue>
                    <resetMask>0xFF</resetMask>
                    <dataType>uint16_t</dataType>

                </register>
            </registers>
        </peripheral>
    </peripherals>
</device>